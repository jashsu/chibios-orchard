

/* Start of automatically generated font definition for augustus18. */

#ifndef MF_RLEFONT_INTERNALS
#define MF_RLEFONT_INTERNALS
#endif
#include "mf_rlefont.h"

#ifndef MF_RLEFONT_VERSION_4_SUPPORTED
#error The font file is not compatible with this version of mcufont.
#endif

static const uint8_t mf_rlefont_augustus18_dictionary_data[211] = {
    0x80, 0x15, 0x05, 0x81, 0x01, 0x80, 0x11, 0x85, 0x03, 0x81, 0x01, 0x0b, 0x06, 0x81, 0x04, 0x81, 
    0x0d, 0x03, 0x80, 0x0d, 0x18, 0x12, 0x17, 0x80, 0x83, 0x0d, 0x07, 0x80, 0x80, 0x02, 0x0d, 0x81, 
    0x03, 0x01, 0x80, 0x16, 0x04, 0x80, 0x01, 0x80, 0x0d, 0x18, 0x87, 0x0f, 0x0c, 0x81, 0x10, 0x81, 
    0x15, 0x02, 0x81, 0x0c, 0x03, 0x80, 0x03, 0x01, 0x81, 0x18, 0x88, 0x09, 0x02, 0x80, 0x03, 0x0a, 
    0x80, 0x11, 0x80, 0x80, 0x01, 0x80, 0x81, 0x15, 0x81, 0x15, 0x81, 0x0f, 0x82, 0x13, 0x41, 0x02, 
    0x01, 0x80, 0x01, 0x09, 0x81, 0x02, 0x08, 0x81, 0x07, 0x0f, 0x80, 0x08, 0x80, 0x35, 0x81, 0x0c, 
    0x1c, 0x3d, 0x3b, 0x1f, 0x30, 0x3b, 0x1f, 0x35, 0x2f, 0xfe, 0x18, 0x3b, 0x1f, 0x21, 0x8c, 0x29, 
    0x2b, 0x29, 0xfc, 0x94, 0x41, 0x1d, 0xa3, 0x32, 0x21, 0x2a, 0x18, 0x2a, 0x18, 0x7b, 0x85, 0x41, 
    0xc5, 0x41, 0xe6, 0x84, 0x94, 0x43, 0x1e, 0x3b, 0x84, 0x87, 0xfe, 0x18, 0x0f, 0x25, 0x25, 0x25, 
    0x30, 0x19, 0x85, 0x40, 0x1d, 0xc7, 0x39, 0xb5, 0x1e, 0xc8, 0x21, 0x86, 0xfd, 0x30, 0x1b, 0x94, 
    0x1c, 0x1b, 0xfc, 0x1d, 0x0f, 0x32, 0x21, 0x90, 0x20, 0x42, 0xfc, 0x2e, 0x2b, 0xa3, 0x21, 0x40, 
    0xe6, 0x21, 0x80, 0x1b, 0xa7, 0x39, 0x95, 0x2f, 0x18, 0x45, 0x19, 0x32, 0x41, 0xca, 0x38, 0x36, 
    0x22, 0x30, 0x3b, 0x1f, 0x2f, 0x94, 0x42, 0xa5, 0x8d, 0x18, 0x2a, 0x2e, 0x1f, 0x29, 0x1d, 0x2e, 
    0x1f, 0x35, 0x32, 
};

static const uint16_t mf_rlefont_augustus18_dictionary_offsets[83] = {
    0x0000, 0x0002, 0x0003, 0x0005, 0x0007, 0x0008, 0x000b, 0x000c, 
    0x000e, 0x0010, 0x0011, 0x0014, 0x0015, 0x0016, 0x0018, 0x001a, 
    0x001c, 0x001e, 0x0021, 0x0024, 0x0026, 0x0029, 0x002c, 0x002e, 
    0x0030, 0x0031, 0x0034, 0x0037, 0x0039, 0x003b, 0x003c, 0x003e, 
    0x003f, 0x0041, 0x0043, 0x0046, 0x004c, 0x004d, 0x004e, 0x0050, 
    0x0053, 0x0056, 0x0059, 0x005b, 0x005d, 0x005e, 0x0060, 0x0067, 
    0x0069, 0x006d, 0x006f, 0x0072, 0x0074, 0x0076, 0x0077, 0x0079, 
    0x007d, 0x008a, 0x008c, 0x0091, 0x0095, 0x0097, 0x0098, 0x009a, 
    0x009c, 0x00a0, 0x00a2, 0x00a4, 0x00a7, 0x00a8, 0x00aa, 0x00ac, 
    0x00af, 0x00b8, 0x00ba, 0x00bf, 0x00c1, 0x00c4, 0x00c8, 0x00c9, 
    0x00cb, 0x00d1, 0x00d3, 
};

static const uint8_t mf_rlefont_augustus18_glyph_data_0[1270] = {
    0x06, 0x00, 0x10, 0x04, 0x23, 0x3b, 0x84, 0x4f, 0x00, 0x67, 0x30, 0x2a, 0x54, 0xff, 0x10, 0x04, 
    0x25, 0xeb, 0x3d, 0x54, 0x3f, 0x21, 0x4b, 0x1b, 0xac, 0x10, 0x0a, 0x21, 0x30, 0x49, 0x1b, 0xaa, 
    0x24, 0x5b, 0x63, 0x7c, 0xa3, 0x42, 0x90, 0x49, 0x1b, 0xf3, 0x93, 0x21, 0xaa, 0x24, 0x5b, 0x88, 
    0x1b, 0xa6, 0x10, 0x09, 0x23, 0xe0, 0x24, 0x6f, 0x42, 0xac, 0x49, 0xee, 0x2f, 0x88, 0x2f, 0x86, 
    0x2f, 0x87, 0x39, 0x54, 0x8a, 0x69, 0x9d, 0x56, 0x96, 0x42, 0xb8, 0x21, 0x7c, 0x54, 0x10, 0x0f, 
    0x23, 0x92, 0x31, 0xa8, 0x8c, 0x69, 0x96, 0x56, 0x98, 0x57, 0x89, 0x69, 0xaa, 0x45, 0xb3, 0xa6, 
    0x2e, 0x90, 0x22, 0x8e, 0x22, 0x8e, 0x22, 0x8d, 0x22, 0xfd, 0x63, 0xfe, 0x74, 0x10, 0x10, 0x23, 
    0x74, 0x3d, 0xb5, 0x49, 0xec, 0x49, 0x22, 0x1d, 0x31, 0x5f, 0xfe, 0x91, 0x80, 0x85, 0x8c, 0xaa, 
    0xa8, 0x43, 0x20, 0x94, 0x38, 0x5a, 0xc6, 0x40, 0xbc, 0x5e, 0x20, 0x45, 0x7c, 0x74, 0x10, 0x02, 
    0x25, 0x58, 0x30, 0x67, 0x10, 0x06, 0x23, 0x1d, 0x3d, 0x58, 0x3d, 0x51, 0x67, 0x67, 0x2a, 0x52, 
    0x10, 0x06, 0x00, 0x25, 0x25, 0x67, 0xe6, 0x30, 0x18, 0x4f, 0x58, 0x84, 0x57, 0x39, 0x10, 0x07, 
    0xfc, 0x2a, 0x1b, 0x7c, 0x1b, 0xe0, 0x3d, 0xa3, 0x3d, 0x8d, 0x39, 0x10, 0x0a, 0x21, 0x44, 0x44, 
    0x2a, 0x67, 0x28, 0x2f, 0x59, 0x4f, 0x10, 0x05, 0x84, 0x44, 0x44, 0x3e, 0x57, 0x39, 0x54, 0x30, 
    0x67, 0x18, 0x06, 0x3e, 0x43, 0xec, 0x24, 0x5b, 0x80, 0x24, 0x5b, 0x63, 0x10, 0x04, 0x24, 0x3e, 
    0x3e, 0x61, 0xe4, 0x74, 0x10, 0x08, 0x19, 0x51, 0x58, 0x30, 0x18, 0x58, 0x30, 0x61, 0x35, 0x58, 
    0xe4, 0x2f, 0x10, 0x0c, 0xe4, 0x25, 0x26, 0x94, 0x94, 0x57, 0x22, 0x85, 0x22, 0xfd, 0x43, 0x69, 
    0x4b, 0x19, 0x4b, 0x43, 0x84, 0x4b, 0x43, 0x2e, 0x43, 0x56, 0x53, 0x00, 0x21, 0x59, 0xe3, 0x10, 
    0x09, 0xe4, 0x23, 0x61, 0xe4, 0x74, 0x21, 0x4b, 0x45, 0x5a, 0x48, 0x30, 0x3b, 0x5f, 0x10, 0x0b, 
    0x23, 0x80, 0x39, 0x5d, 0x1f, 0x56, 0x5a, 0x69, 0x20, 0x56, 0x5a, 0x2e, 0x5a, 0x35, 0x5a, 0x90, 
    0x2f, 0x54, 0x95, 0x42, 0xa5, 0x42, 0xa5, 0x42, 0x83, 0x10, 0x0a, 0x2d, 0xc5, 0x86, 0x69, 0x86, 
    0x69, 0x51, 0x1b, 0x74, 0x25, 0x61, 0x38, 0x24, 0x94, 0x56, 0x5d, 0xd5, 0x1b, 0xe3, 0x10, 0x0b, 
    0x21, 0x24, 0x18, 0x54, 0xe7, 0x39, 0x8a, 0x21, 0xa8, 0x1b, 0xb5, 0x2f, 0x1d, 0x5e, 0x5d, 0xff, 
    0x83, 0x3d, 0x3b, 0x5f, 0x10, 0x09, 0x23, 0x1c, 0x39, 0x94, 0x49, 0x88, 0x57, 0x1b, 0xf1, 0x1b, 
    0x7a, 0x61, 0x35, 0x51, 0x3b, 0xa5, 0x1b, 0xe3, 0x10, 0x0b, 0x19, 0x23, 0x18, 0x18, 0x18, 0x18, 
    0x18, 0x83, 0x49, 0x2b, 0x5e, 0x1f, 0x56, 0x5a, 0x69, 0x20, 0x29, 0x22, 0xd0, 0x4e, 0xc2, 0x10, 
    0x0b, 0x34, 0x57, 0x90, 0x69, 0x8c, 0x21, 0x85, 0x58, 0x3d, 0x51, 0x18, 0x54, 0x61, 0x41, 0x42, 
    0x10, 0x0a, 0x23, 0x80, 0x39, 0x5d, 0x4b, 0x57, 0x36, 0x49, 0x90, 0x21, 0xaa, 0x1b, 0x72, 0x49, 
    0xdc, 0x5e, 0x5a, 0x29, 0x31, 0xd0, 0x5d, 0xd5, 0x1b, 0xe3, 0x10, 0x0b, 0x23, 0xe0, 0x45, 0x5a, 
    0x22, 0xd0, 0xa4, 0x57, 0x22, 0x3f, 0x1f, 0x56, 0x53, 0x42, 0x1d, 0x21, 0x74, 0x18, 0x1b, 0x94, 
    0x3d, 0x87, 0x2f, 0x10, 0x04, 0x3e, 0x38, 0x30, 0x54, 0x2a, 0x44, 0x49, 0x3d, 0x54, 0xff, 0x10, 
    0x05, 0x1e, 0x3e, 0x85, 0x2f, 0x25, 0x44, 0x57, 0x39, 0x54, 0x30, 0x67, 0x18, 0x08, 0x3e, 0x57, 
    0x2f, 0x1b, 0xd2, 0x39, 0x61, 0x35, 0xe0, 0x84, 0x2f, 0x67, 0x10, 0x09, 0x00, 0x44, 0x3e, 0x2d, 
    0x25, 0x83, 0x10, 0x08, 0x3e, 0x41, 0x21, 0xa0, 0x21, 0x40, 0x30, 0x61, 0x37, 0x74, 0x24, 0x8b, 
    0x2f, 0x10, 0x09, 0x23, 0x47, 0x45, 0x4b, 0x22, 0xcc, 0x5d, 0x4b, 0x57, 0xc8, 0x29, 0xca, 0x21, 
    0x82, 0x84, 0x69, 0x18, 0x18, 0x18, 0x61, 0xe4, 0x1f, 0x10, 0x0e, 0xe4, 0x25, 0xa3, 0x42, 0x1f, 
    0x56, 0x4b, 0x1e, 0xa5, 0xa5, 0x1e, 0x9d, 0xa9, 0x1e, 0x8d, 0xaa, 0x38, 0x91, 0xaa, 0x1e, 0x91, 
    0xa6, 0x1e, 0xd1, 0xaa, 0x84, 0x4b, 0xae, 0x2c, 0x96, 0xa8, 0x56, 0x5d, 0xe3, 0x10, 0x0f, 0x19, 
    0x23, 0x2a, 0x54, 0x54, 0xfe, 0x3d, 0x9e, 0x39, 0x8c, 0x49, 0x8a, 0x21, 0x83, 0x49, 0x22, 0xd0, 
    0x20, 0x57, 0x22, 0x3f, 0x1f, 0x35, 0xc2, 0x5f, 0x10, 0x0b, 0x2d, 0x36, 0xb5, 0x65, 0x2f, 0xdc, 
    0x2f, 0x31, 0xe4, 0x82, 0x39, 0xb5, 0x2f, 0x5d, 0xfd, 0x94, 0x5e, 0x5d, 0xa5, 0x5e, 0x1c, 0x10, 
    0x0e, 0x00, 0x1f, 0x1b, 0x50, 0x35, 0x41, 0x8c, 0x40, 0x27, 0x69, 0x53, 0x42, 0xe3, 0x10, 0x0f, 
    0x34, 0xfd, 0x5e, 0x4b, 0x4a, 0x20, 0x2e, 0x41, 0x20, 0x41, 0x20, 0x41, 0x20, 0x41, 0x20, 0x41, 
    0x20, 0x43, 0x2e, 0x27, 0x29, 0x31, 0x3c, 0x83, 0x10, 0x0b, 0x34, 0x65, 0x00, 0x42, 0x61, 0x60, 
    0x19, 0x65, 0x5e, 0x83, 0x10, 0x0a, 0x2d, 0x00, 0x8a, 0x1b, 0xa7, 0x39, 0x61, 0x60, 0x21, 0x41, 
    0x5e, 0x24, 0x82, 0x10, 0x0f, 0x43, 0x3d, 0x50, 0xbc, 0x87, 0x5a, 0x43, 0x69, 0x4b, 0x69, 0x53, 
    0x5e, 0xe3, 0x10, 0x10, 0x23, 0x1c, 0x80, 0x85, 0x1f, 0x1f, 0x29, 0x1d, 0x68, 0x21, 0x1c, 0x26, 
    0x1a, 0x5a, 0x68, 0x29, 0x1d, 0x38, 0xa3, 0x82, 0x10, 0x07, 0x23, 0x46, 0x30, 0x3b, 0x5f, 0x10, 
    0x08, 0x23, 0x46, 0x30, 0x3b, 0x74, 0x10, 0x0f, 0x23, 0xe3, 0x81, 0x29, 0xca, 0x29, 0xe7, 0x21, 
    0xaa, 0x1b, 0x8f, 0x39, 0x54, 0x54, 0xc9, 0x39, 0x91, 0x2f, 0x90, 0x84, 0x40, 0x8a, 0x29, 0x8a, 
    0x38, 0xa3, 0x7c, 0x10, 0x0a, 0x23, 0x46, 0xe4, 0x39, 0x85, 0x65, 0x5e, 0x83, 0x10, 0x14, 0x23, 
    0xe8, 0x38, 0x38, 0x1e, 0x85, 0x5a, 0x41, 0xd8, 0x43, 0xc6, 0x4b, 0x87, 0xac, 0x85, 0x8c, 0x85, 
    0xb6, 0x43, 0x32, 0xa8, 0x85, 0x32, 0xa5, 0x1d, 0x84, 0x86, 0x95, 0x90, 0x4b, 0x1d, 0x85, 0x85, 
    0x8c, 0xac, 0xa4, 0x43, 0x5a, 0xa4, 0x84, 0xa3, 0x8c, 0x80, 0x10, 0x11, 0x47, 0x84, 0x80, 0x41, 
    0x8c, 0x84, 0x98, 0x43, 0x35, 0xd6, 0x43, 0x35, 0xa6, 0x27, 0x38, 0x94, 0xa4, 0x38, 0xa4, 0xa4, 
    0x38, 0x84, 0xa5, 0x38, 0x27, 0xcd, 0x84, 0x8c, 0x1f, 0x86, 0x4b, 0x43, 0x87, 0x4b, 0x40, 0x84, 
    0xa3, 0x43, 0x10, 0x0f, 0x23, 0x5f, 0xe8, 0x74, 0x2e, 0x41, 0x2b, 0x40, 0x4c, 0x4c, 0x43, 0x84, 
    0x5a, 0x4c, 0x4c, 0x84, 0x8c, 0x62, 0x1a, 0x5d, 0xe3, 0x10, 0x0c, 0x2d, 0x36, 0xb5, 0x2f, 0x5d, 
    0x28, 0x31, 0x1d, 0x1d, 0x5e, 0x5d, 0xb5, 0x21, 0x7c, 0x1b, 0x51, 0x3b, 0x5f, 0x10, 0x0f, 0x23, 
    0x5f, 0x90, 0xa0, 0x69, 0x5a, 0x38, 0x40, 0x4c, 0x4c, 0x4c, 0x4c, 0x4c, 0x84, 0x8c, 0x62, 0x28, 
    0x5d, 0xe3, 0x24, 0x51, 0x33, 0x18, 0x80, 0x10, 0x0e, 0x23, 0x59, 0xfe, 0x95, 0x65, 0x2f, 0x94, 
    0x42, 0x5b, 0xe2, 0x1b, 0xf2, 0x1b, 0xb0, 0x1b, 0x6a, 0x39, 0xb5, 0x2f, 0x20, 0x1e, 0x80, 0x75, 
    0x10, 0x09, 0x23, 0x82, 0x2f, 0x94, 0x42, 0xa4, 0x49, 0x8c, 0x21, 0x51, 0x51, 0x33, 0x18, 0x51, 
    0x33, 0x49, 0xcc, 0x42, 0xa4, 0x49, 0x31, 0x5f, 0x10, 0x0b, 0x23, 0x1c, 0x26, 0xb5, 0x22, 0xb5, 
    0x22, 0xd5, 0x5b, 0x48, 0x30, 0x3b, 0x5f, 0x10, 0x10, 0x23, 0x1c, 0x7c, 0x85, 0x1f, 0x27, 0x4a, 
    0x2b, 0x4a, 0x2b, 0x4a, 0x94, 0x2e, 0x27, 0x4a, 0x1d, 0x29, 0xea, 0x21, 0x7c, 0x10, 0x0f, 0x30, 
    0xbc, 0x87, 0xa3, 0x38, 0x43, 0x29, 0xcc, 0x29, 0x8c, 0x56, 0x22, 0x1d, 0x22, 0x94, 0x4e, 0xaa, 
    0x3d, 0x8d, 0x39, 0x86, 0x2f, 0x18, 0x87, 0x39, 0x10, 0x17, 0x1e, 0x85, 0x1f, 0x93, 0x8c, 0x74, 
    0xa7, 0x27, 0x27, 0x1f, 0x1f, 0x4b, 0x5a, 0x94, 0x85, 0x85, 0x8c, 0xac, 0xa5, 0x84, 0x90, 0xa8, 
    0x94, 0x43, 0x8c, 0xaa, 0x38, 0x8d, 0xa8, 0x38, 0x89, 0xa8, 0x35, 0xa0, 0x74, 0x35, 0xbc, 0x1f, 
    0x56, 0x5a, 0x69, 0x20, 0x10, 0x0d, 0x25, 0xe3, 0x80, 0x56, 0xcc, 0x42, 0x95, 0x39, 0x8d, 0x39, 
    0x86, 0x2f, 0x61, 0xfc, 0x4b, 0x1b, 0x6c, 0x24, 0x5b, 0x88, 0x87, 0x69, 0x31, 0xa3, 0x80, 0x10, 
    0x0e, 0x23, 0xcb, 0x80, 0x29, 0xe8, 0x42, 0x5b, 0x63, 0x5a, 0x1b, 0xcc, 0x1b, 0x1d, 0x3d, 0x48, 
    0x24, 0x82, 0x10, 0x0c, 0x34, 0x1a, 0x38, 0x41, 0x00, 0x94, 0x1f, 0x21, 0x85, 0x51, 0x18, 0x54, 
    0x18, 0x61, 0x41, 0x29, 0xdc, 0x56, 0xa4, 0x35, 0x7c, 0x83, 0x10, 0x05, 0x30, 0x7c, 0x24, 0x48, 
    0x64, 0x64, 0x24, 0x7c, 0x10, 0x0c, 0x23, 0x52, 0x00, 0x52, 0x00, 0x52, 0x33, 0x10, 0x05, 0x25, 
    0xeb, 0x3d, 0x48, 0x64, 0x64, 0x24, 0xe2, 0x10, 0x06, 0x47, 0x24, 0xc2, 0x10, 0x0d, 0x00, 0x44, 
    0x44, 0x3e, 0x3e, 0x82, 0x83, 0x10, 0x04, 0x23, 0x85, 0x39, 0x67, 0x0f, 0x10, 0x05, 0x23, 0x31, 
    0x41, 0x21, 0x4f, 0x3f, 0x3d, 0x2a, 0x4f, 0x2a, 0x1b, 0x1f, 0x10, 0x02, 0x00, 0x30, 0x4f, 0x4f, 
    0x4f, 0x4f, 0x10, 0x05, 0x3d, 0x5a, 0x30, 0x18, 0x4f, 0x51, 0x33, 0x3d, 0x48, 0x30, 0x61, 0x10, 
    0x07, 0x23, 0xb7, 0x49, 0x3c, 0x10, 
};

static const uint16_t mf_rlefont_augustus18_glyph_offsets_0[95] = {
    0x0000, 0x0003, 0x000f, 0x001a, 0x0033, 0x004f, 0x006e, 0x008f, 
    0x0095, 0x00a1, 0x00af, 0x00bc, 0x00c7, 0x00d2, 0x00dd, 0x00e5, 
    0x00f3, 0x0110, 0x011f, 0x013a, 0x014f, 0x0165, 0x0179, 0x0190, 
    0x01a1, 0x01bb, 0x01d4, 0x01e0, 0x01ed, 0x01fb, 0x0203, 0x0212, 
    0x022a, 0x024e, 0x0269, 0x0280, 0x028f, 0x02a9, 0x02b5, 0x02c4, 
    0x02d3, 0x02e9, 0x02f0, 0x02f7, 0x0314, 0x031e, 0x034b, 0x0373, 
    0x038a, 0x039e, 0x03b8, 0x03d1, 0x03e9, 0x03f8, 0x040e, 0x0429, 
    0x0455, 0x0470, 0x0483, 0x049b, 0x04a5, 0x04ae, 0x04b8, 0x04bd, 
    0x04c6, 0x024e, 0x0269, 0x0280, 0x028f, 0x02a9, 0x02b5, 0x02c4, 
    0x02d3, 0x02e9, 0x02f0, 0x02f7, 0x0314, 0x031e, 0x034b, 0x0373, 
    0x038a, 0x039e, 0x03b8, 0x03d1, 0x03e9, 0x03f8, 0x040e, 0x0429, 
    0x0455, 0x0470, 0x0483, 0x04cd, 0x04db, 0x04e3, 0x04f0, 
};

static const struct mf_rlefont_char_range_s mf_rlefont_augustus18_char_ranges[] = {
    {32, 95, mf_rlefont_augustus18_glyph_offsets_0, mf_rlefont_augustus18_glyph_data_0},
};

const struct mf_rlefont_s mf_rlefont_augustus18 = {
    {
    "Augustus Regular 18",
    "augustus18",
    23, /* width */
    17, /* height */
    2, /* min x advance */
    23, /* max x advance */
    0, /* baseline x */
    14, /* baseline y */
    21, /* line height */
    2, /* flags */
    63, /* fallback character */
    &mf_rlefont_character_width,
    &mf_rlefont_render_character,
    },
    4, /* version */
    mf_rlefont_augustus18_dictionary_data,
    mf_rlefont_augustus18_dictionary_offsets,
    46, /* rle dict count */
    82, /* total dict count */
    1, /* char range count */
    mf_rlefont_augustus18_char_ranges,
};

#ifdef MF_INCLUDED_FONTS
/* List entry for searching fonts by name. */
static const struct mf_font_list_s mf_rlefont_augustus18_listentry = {
    MF_INCLUDED_FONTS,
    (struct mf_font_s*)&mf_rlefont_augustus18
};
#undef MF_INCLUDED_FONTS
#define MF_INCLUDED_FONTS (&mf_rlefont_augustus18_listentry)
#endif


/* End of automatically generated font definition for augustus18. */

